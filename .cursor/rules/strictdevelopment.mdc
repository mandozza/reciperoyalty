---
description: 
globs: 
alwaysApply: true
---
---
description: Rules for development process and documentation
globs: 
alwaysApply: true
emoji: ‚ö°
title: Strict Development Process
---
# Cursor Rule: Strict Development Process

## 1. üìã Pre-Development Requirements
- **MANDATORY**: Must read and understand ALL documentation:
  - `productrequirements.md`: Product vision and features
  - `softwarerequirements.md`: Technical architecture and stack
  - `userinterfacerequirements.md`: UI/UX guidelines
  - `componentguide.md`: Component standards
  - `storybooklibary.txt`: Storybook documentation

## 2. üèó Architecture Compliance
- **ENFORCED**: Must follow Next.js App Router conventions
- **REQUIRED**: Implement features using prescribed tech stack:
  - Next.js with TypeScript
  - MongoDB with Mongoose
  - ShadcnUI + Tailwind CSS
  - NextAuth.js for authentication
  - Storybook for component documentation

## 3. üì± Development Standards
### Mobile-First Implementation
- Start with mobile layout first
- Test on mobile viewports before desktop
- Implement responsive design using Tailwind breakpoints

### Component Development
- Create Storybook stories before or during component development
- Follow ShadcnUI theming and customization patterns
- Implement dark mode by default
- Document all props and variants

### State Management
- Use React Context for global state
- Implement local state for component-level control
- Follow prescribed data flow patterns

## 4. üß™ Quality Standards
### Testing Requirements
- Write component stories in Storybook
- Test all components across breakpoints
- Verify dark/light mode implementations
- Ensure accessibility compliance

### Code Quality
- Follow TypeScript strict mode
- Maintain proper file structure
- Use proper naming conventions
- Document complex logic

## 5. ‚úÖ Task Management
### Before Starting a Task
1. Verify task exists in todolist.md
2. Review related documentation
3. Check existing components in Storybook
4. Plan implementation approach

### After Completing a Task
1. Update todolist.md
2. Mark task as [x]
3. Add/update Storybook documentation
4. Create commit with meaningful message
5. Verify mobile and desktop views

## 6. ‚ùå Strict Prohibitions
- NO implementation without reading documentation
- NO skipping Storybook documentation
- NO desktop-first development
- NO ignoring TypeScript types
- NO hardcoded values (use environment variables)
- NO direct MongoDB calls (use Mongoose)
- NO custom styling outside Tailwind/ShadcnUI system
- NO implementing features not in todolist.md

## 7. üîÑ Development Flow
1. Read documentation
2. Plan implementation
3. Create Storybook story
4. Implement mobile view
5. Add responsive design
6. Test dark/light modes
7. Document component
8. Update todolist.md
9. Commit changes

## 8. üíª Code Organization
- Follow prescribed folder structure:
  ```
  src/
    app/          # Next.js App Router pages
    components/   # React components
    lib/         # Utilities and helpers
    types/       # TypeScript types
    hooks/       # Custom React hooks
    styles/      # Global styles
    stories/     # Storybook stories
  ```

## 9. üé® UI/UX Standards
- Follow mobile-first design
- Implement proper loading states
- Add error boundaries
- Ensure keyboard navigation
- Maintain accessibility standards
- Support dark/light modes

## 10. üìù Documentation Requirements
- Update Storybook for all new components
- Document props and variants
- Include usage examples
- Show responsive behavior
- Demonstrate theme variations

## Validation Rules
- ‚ùå Cannot start coding until documentation is reviewed
- ‚ùå Cannot skip mobile-first implementation
- ‚ùå Cannot ignore Storybook documentation
- ‚ùå Cannot implement undocumented features
- ‚ùå Cannot bypass TypeScript strict mode
- ‚ùå Cannot merge without proper documentation

